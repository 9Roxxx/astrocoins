from django.core.management.base import BaseCommand
from django.db import connection
from core.models import User, City
import logging

logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥–æ—Ä–æ–¥–æ–≤'
    
    def add_city_column_if_not_exists(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫—É city_id –≤ —Ç–∞–±–ª–∏—Ü—É core_user –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç"""
        with connection.cursor() as cursor:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏
            cursor.execute("PRAGMA table_info(core_user)")
            columns = [column[1] for column in cursor.fetchall()]
            
            if 'city_id' not in columns:
                self.stdout.write("üîß –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É city_id –≤ —Ç–∞–±–ª–∏—Ü—É core_user...")
                cursor.execute("ALTER TABLE core_user ADD COLUMN city_id INTEGER NULL")
                cursor.execute("CREATE INDEX IF NOT EXISTS core_user_city_id_idx ON core_user(city_id)")
                self.stdout.write("  ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ city_id –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            else:
                self.stdout.write("  ‚ÑπÔ∏è  –ö–æ–ª–æ–Ω–∫–∞ city_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    def handle(self, *args, **options):
        """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥–æ—Ä–æ–¥–æ–≤"""
        
        self.stdout.write(self.style.WARNING("üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."))
        
        # 1. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É city_id –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        self.add_city_column_if_not_exists()
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        city_admins = [
            {'username': 'adminVld', 'city_name': '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫'},
            {'username': 'adminBlag', 'city_name': '–ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫'},
            {'username': 'adminSpassk', 'city_name': '–°–ø–∞—Å—Å–∫-–î–∞–ª—å–Ω–∏–π'},
            {'username': 'adminUssur', 'city_name': '–£—Å—Å—É—Ä–∏–π—Å–∫'},
            {'username': 'adminNakhodka', 'city_name': '–ù–∞—Ö–æ–¥–∫–∞'},
            {'username': 'adminSvobodniy', 'city_name': '–°–≤–æ–±–æ–¥–Ω—ã–π'},
        ]
        
        self.stdout.write(self.style.WARNING("üèóÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤..."))
        
        # 2. –°–æ–∑–¥–∞–µ–º –≥–æ—Ä–æ–¥–∞ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        self.stdout.write("üìç –°–æ–∑–¥–∞–µ–º –≥–æ—Ä–æ–¥–∞...")
        for admin_data in city_admins:
            city, created = City.objects.get_or_create(
                name=admin_data['city_name'],
                defaults={'description': f'–ì–æ—Ä–æ–¥ {admin_data["city_name"]}'}
            )
            if created:
                self.stdout.write(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –≥–æ—Ä–æ–¥: {city.name}")
            else:
                self.stdout.write(f"  üìç –ì–æ—Ä–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {city.name}")
        
        # 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–æ–≤)
        self.stdout.write(self.style.WARNING("üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."))
        
        # –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º raw SQL –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        with connection.cursor() as cursor:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ—Ç–æ—Ä—ã—Ö –ù–ï –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å
            admin_usernames = [admin['username'] for admin in city_admins]
            placeholders = ','.join(['?' for _ in admin_usernames])
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
            cursor.execute(f"""
                SELECT COUNT(*) FROM core_user 
                WHERE username NOT IN ({placeholders})
                AND NOT (is_superuser = 1 AND username LIKE 'admin%')
            """, admin_usernames)
            
            count_to_delete = cursor.fetchone()[0]
            
            if count_to_delete > 0:
                # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                cursor.execute(f"""
                    DELETE FROM core_user 
                    WHERE username NOT IN ({placeholders})
                    AND NOT (is_superuser = 1 AND username LIKE 'admin%')
                """, admin_usernames)
                self.stdout.write(f"  üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {count_to_delete}")
            else:
                self.stdout.write("  ‚ÑπÔ∏è  –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        
        # 4. –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥–æ—Ä–æ–¥–æ–≤
        self.stdout.write("üë• –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥–æ—Ä–æ–¥–æ–≤...")
        
        for admin_data in city_admins:
            username = admin_data['username']
            city_name = admin_data['city_name']
            
            try:
                city = City.objects.get(name=city_name)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                user, created = User.objects.get_or_create(
                    username=username,
                    defaults={
                        'email': f'{username}@algoritmika25.store',
                        'role': 'admin',
                        'is_superuser': True,
                        'is_staff': True,
                        'city': city,
                        'first_name': f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                        'last_name': city_name,
                    }
                )
                
                if created:
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
                    user.set_password('admin123456')
                    user.save()
                    self.stdout.write(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {username} (–≥–æ—Ä–æ–¥: {city_name})")
                else:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
                    user.role = 'admin'
                    user.is_superuser = True
                    user.is_staff = True
                    user.city = city
                    user.first_name = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
                    user.last_name = city_name
                    user.set_password('admin123456')
                    user.save()
                    self.stdout.write(f"  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {username} (–≥–æ—Ä–æ–¥: {city_name})")
                
            except City.DoesNotExist:
                self.stdout.write(
                    self.style.ERROR(f"  ‚ùå –ì–æ—Ä–æ–¥ {city_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è {username}")
                )
            except Exception as e:
                self.stdout.write(
                    self.style.ERROR(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ {username}: {str(e)}")
                )
        
        # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.stdout.write("\n" + "="*60)
        self.stdout.write(self.style.SUCCESS("üéä –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"))
        self.stdout.write("="*60)
        
        self.stdout.write("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        self.stdout.write(f"  üèôÔ∏è  –í—Å–µ–≥–æ –≥–æ—Ä–æ–¥–æ–≤: {City.objects.count()}")
        self.stdout.write(f"  üë• –í—Å–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {User.objects.filter(role='admin').count()}")
        self.stdout.write(f"  üìö –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.count()}")
        
        self.stdout.write("\nüîê –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
        for admin_data in city_admins:
            username = admin_data['username']
            city_name = admin_data['city_name']
            self.stdout.write(f"  üë§ {username} / admin123456 (–≥–æ—Ä–æ–¥: {city_name})")
        
        self.stdout.write("\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ:")
        self.stdout.write("  1. –í–æ–π—Ç–∏ –∫–∞–∫ –ª—é–±–æ–π –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        self.stdout.write("  2. –°–æ–∑–¥–∞–≤–∞—Ç—å —É—á–µ–Ω–∏–∫–æ–≤ –∏ —É—á–∏—Ç–µ–ª–µ–π –≤ —Å–≤–æ–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö")
        self.stdout.write("  3. –î–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö")
        
        self.stdout.write(self.style.SUCCESS("\n‚ú® –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!"))
